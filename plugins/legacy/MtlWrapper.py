'''

  V-Ray/Blender

  http://vray.cgdo.ru

  Author: Andrey M. Izrantsev (aka bdancer)
  E-Mail: izrantsev@cgdo.ru

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  All Rights Reserved. V-Ray(R) is a registered trademark of Chaos Software.

'''


TYPE= 'MATERIAL'
ID=   'MtlWrapper'

NAME= 'Wrapper'
UI=   "Wrapper"
DESC= "MtlWrapper settings"

PARAMS= (
	#'base_material',
	'generate_gi',
	'receive_gi',
	'generate_caustics',
	'receive_caustics',
	'alpha_contribution',
	'matte_surface',
	'shadows',
	'affect_alpha',
	'shadow_tint_color',
	'shadow_brightness',
	'reflection_amount',
	'refraction_amount',
	'gi_amount',
	'no_gi_on_other_mattes',
	'matte_for_secondary_rays',
	'gi_surface_id',
	'gi_quality_multiplier',
	#'alpha_contribution_tex',
	#'shadow_brightness_tex',
	#'reflection_filter_tex',
	'trace_depth',
	#'channels'
)


''' Blender modules '''
import bpy
from bpy.props import *


def add_properties(rna_pointer):
	class MtlWrapper(bpy.types.PropertyGroup):
		pass
	bpy.utils.register_class(MtlWrapper)

	rna_pointer.MtlWrapper= PointerProperty(
		name= "MtlWrapper",
		type=  MtlWrapper,
		description= "V-Ray MtlWrapper settings"
	)

	MtlWrapper.use= BoolProperty(
		name= "Use wrapper",
		description= "Use wrapper",
		default= False
	)

	MtlWrapper.generate_gi= FloatProperty(
		name= "Generate GI",
		description= "Controls the GI generated by the material",
		min= 0.0,
		max= 100.0,
		soft_min= 0.0,
		soft_max= 10.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.receive_gi= FloatProperty(
		name= "Receive GI",
		description= "Controls the GI received by the material",
		min= 0.0,
		max= 100.0,
		soft_min= 0.0,
		soft_max= 10.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.generate_caustics= FloatProperty(
		name= "Generate caustics",
		description= "Controls the caustics generated by the material",
		min= 0.0,
		max= 100.0,
		soft_min= 0.0,
		soft_max= 10.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.receive_caustics= FloatProperty(
		name= "Receive caustics",
		description= "Controls the caustics received by the material",
		min= 0.0,
		max= 100.0,
		soft_min= 0.0,
		soft_max= 10.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.alpha_contribution= FloatProperty(
		name= "Alpha contribution",
		description= "The contribution of the resulting color to the alpha channel",
		min= -1.0,
		max= 1.0,
		soft_min= -1.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.matte_surface= BoolProperty(
		name= "Matte surface",
		description= "Makes the material appear as a matte material, which shows the background, instead of the base material, when viewed directly",
		default= False
	)

	MtlWrapper.shadows= BoolProperty(
		name= "Shadows",
		description= "Turn this on to make shadow visible on the matter surface",
		default= False
	)

	MtlWrapper.affect_alpha= BoolProperty(
		name= "Affect alpha",
		description= "Turn this on to make shadows affect the alpha contribution of the matte surface",
		default= False
	)

	MtlWrapper.shadow_tint_color= FloatVectorProperty(
		name= "Shadow tint color",
		description= 'Tint for the shadows on the matte surface',
		subtype= 'COLOR',
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		default= (0.0,0.0,0.0)
	)

	MtlWrapper.shadow_brightness= FloatProperty(
		name= "Shadow brightness",
		description= "An optional brightness parameter for the shadows on the matte surface.A value of 0.0 will make the shadows completely invisible, while a value of 1.0 will show the full shadows",
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.reflection_amount= FloatProperty(
		name= "Reflection amount",
		description= "Shows the reflections of the base material",
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.refraction_amount= FloatProperty(
		name= "Refraction amount",
		description= "Shows the refractions of the base material",
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.gi_amount= FloatProperty(
		name= "GI amount",
		description= "Determines the amount of gi shadows",
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.no_gi_on_other_mattes= BoolProperty(
		name= "No GI on other mattes",
		description= "This will cause the material to appear as a matte object in reflections, refractions, GI etc for other matte objects",
		default= True
	)

	MtlWrapper.matte_for_secondary_rays= BoolProperty(
		name= "Matte for secondary rays",
		description= "Turn this on to make the material act as matte for all secondary rays (reflections, refractions, etc)",
		default= False
	)

	MtlWrapper.gi_surface_id= IntProperty(
		name= "GI surface ID",
		description= "If two objects have different GI surface ids, the light cache samples of the two objects will not be blended",
		min= 0,
		max= 10,
		default= 0
	)

	MtlWrapper.gi_quality_multiplier= FloatProperty(
		name= "GI quality multiplier",
		description= "A multiplier for GI quality",
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		precision= 3,
		default= 1
	)

	MtlWrapper.reflection_filter_tex= FloatVectorProperty(
		name= "Reflection filter",
		description= 'Reflection filter',
		subtype= 'COLOR',
		min= 0.0,
		max= 1.0,
		soft_min= 0.0,
		soft_max= 1.0,
		default= (1.0,1.0,1.0)
	)

	MtlWrapper.trace_depth= IntProperty(
		name= "Trace depth",
		description= "The maximum reflection depth (-1 is controlled by the global options)",
		min= -1,
		max= 1000,
		default= -1
	)

